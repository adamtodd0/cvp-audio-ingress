parameters:
  - name: env
    type: string
    default: 'sbox'

stages:
  - ${{ if ne(parameters.env, 'sbox') }}:
    - stage: Wait${{parameters.env}}
      displayName: '${{parameters.env}} Waiting for Approval'
      condition: succeeded()
      dependsOn: Plan${{parameters.env}}
      jobs:
        - job: waitForValidation
          displayName: '${{parameters.env}} Wait for external validation'
          pool: server
          timeoutInMinutes: 4320 # job times out in 3 days
          steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              instructions: 'Please validate the Terraform Plan for PROD environment to resume'
              onTimeout: 'reject'

  - stage: Apply${{parameters.env}}
    displayName: 'Apply to ${{parameters.env}}'
    ${{ if or(ne(parameters.env, 'sbox'), contains(variables['Build.SourceBranch'], 'refs/heads/VIH-8192'))  }}:
      dependsOn: Plan${{parameters.env}}
    ${{ if and(ne(parameters.env, 'sbox'), eq(contains(variables['Build.SourceBranch'], 'refs/heads/VIH-8192'), False)) }}:
      dependsOn: Wait${{parameters.env}}
    condition: and(succeeded(), or(eq('${{ parameters.env}}','sbox'),eq('${{ parameters.env}}','stg'),and(contains(variables['Build.SourceBranch'], 'refs/heads/master'), eq('${{ parameters.env}}', 'prod'))))
    variables:
      - template: ../variables/variables-common.yaml
      - template: ../variables/variables-${{parameters.env}}.yaml
      - group: cvp-${{parameters.env}}
    jobs:
      - job: ApplyTfToEnv
        displayName: 'Terraform to ${{parameters.env}}'
        steps:
          - template: templates\Azure\Common\unlock-resource.yml@azTemplates
            parameters:
              subscriptionName:  ${{variables.subscriptionName}}
              resourceName: "${{variables.product}}recordings${{variables.env}}sa"
              resourceGroupName: "${{variables.product}}-recordings-${{variables.env}}-rg"
              lockName: "resource-sa"
              resourceType: "Microsoft.Storage/storageAccounts"

          - template: ../steps/tf-apply.yaml
            parameters:
              subscriptionName: ${{variables.subscriptionName}}
              env: ${{variables.env}}
              location: ${{variables.location}}
              locationEng: ${{variables.locationEng}}
              product: ${{variables.product}}

      - job: ApplyDynaToEnv
        displayName: 'Dynatrace to ${{parameters.env}}'
        dependsOn: ApplyTfToEnv
        steps:
          - template: ../steps/az-dynatrace.yaml
            parameters:
              subscriptionName: ${{variables.subscriptionName}}
              env: ${{variables.env}}
              location: ${{variables.location}}
              product: ${{variables.product}}
