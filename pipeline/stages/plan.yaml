parameters:
  - name: env
    type: string
    default: 'sbox'
  - name: dependsOnEnv
    type: string
    default: ''

stages:
  - stage: 'Plan${{parameters.env}}'
    displayName: 'Plan ${{parameters.env}}'
    ${{ if eq(parameters.dependsOnEnv, '') }}:
      dependsOn: Build
    ${{ if ne(parameters.dependsOnEnv, '') }}:
      dependsOn: 'Test${{parameters.dependsOnEnv}}'
    variables:
      - template: ../variables/variables-common.yaml
      - ${{ if ne(parameters.env, 'prod') }}:
        - template: ../variables/variables-${{parameters.env}}.yaml
        - group: cvp-${{parameters.env}}
      - ${{ if and(contains(variables['Build.SourceBranch'], 'refs/heads/master'), eq(parameters.env, 'prod')) }}:
        # Production (prod)
        - template: ../variables/variables-prod.yaml
        - group: cvp-prod
    jobs:
      - job: PlanToEnv${{parameters.env}}
        displayName: 'Plan to ${{parameters.env}}'
        steps:

          - template: ../steps/tf-init.yaml
            parameters:
              subscriptionName: ${{variables.subscriptionName}}
              env: ${{variables.env}}
              location: ${{variables.location}}
              locationEng: ${{variables.locationEng}}
              product: ${{variables.product}}
              useBackend: true

          - template: ../steps/tf-plan.yaml
            parameters:
              subscriptionName: ${{variables.subscriptionName}}
              env: ${{variables.env}}
              certName: ${{variables.certName}}
              location: ${{variables.location}}
              product: ${{variables.product}}
              builtFrom: $(Build.Repository.Name)
              # Manually passed in for use in scripts where resources are tagged
              businessArea: ${{variables.businessArea}}
              application: ${{variables.application}}