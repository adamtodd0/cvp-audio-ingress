parameters:
  - name: subscriptionName
    type: string
  - name: env
    type: string
  - name: location
    type: string
  - name: product
    type: string

steps:
  - task: AzureCLI@2
    displayName: Add KeyVault FW Exception
    inputs:
      azureSubscription: ${{ parameters.subscriptionName }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $kvName="${{ parameters.product }}-${{ parameters.env }}-kv"
        while ( !$ip ) { $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content }
        az keyvault network-rule add --name ${{ parameters.product }}-${{ parameters.env }}-kv --ip-address "$IP/32"

        $ready = $false; $retry = 0
        while($ready -eq $false -and $retry -lt 10) {
          sleep (15 * $retry++)

          try {
            write-host "checking keyvault access. Count: $retry"
            az keyvault secret list --vault-name ${{ parameters.product }}-${{ parameters.env }}-kv | out-null
            $ready = $true
          } catch {
            $ready = $false
          }
        }

  - task: AzureCLI@2
    displayName: Deploy Dynatrace
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        product="${{ parameters.product }}"
        env="${{ parameters.env }}"

        rgName="${product}-recordings-${env}-rg"
        rgNameCom="${product}-recordings-${env}"
        kvName="${product}-${env}-kv"
        subscriptionName="${{ parameters.subscriptionName }}"
        dynatrace_token='$(dynatrace_token)'
        dynatrace_id='$(dynatrace_id)'
        dynatrace_host_group='$(dynatrace_host_group)'
        dynatrace_network_zone='$(dynatrace_network_zone)'

        echo "our KV is here: https://$kvName.vault.azure.net/secrets/ looking for ${dynatrace_token}"
        dtToken=$(az keyvault secret show --name $dynatrace_token --vault-name $kvName --query "value" -o tsv)
        echo "got token"

        for i in {1..2}
        do

          vmName="${rgNameCom}-vm${i}"

          echo "delete ext for $vmName"
          az vm extension delete --subscription $subscriptionName -g $rgName --vm-name $vmName -n oneAgentLinux || true
          
          echo "deploy ext for $vmName"
          az vm extension set --publisher dynatrace.ruxit --name oneAgentLinux --subscription $subscriptionName --resource-group $rgName --vm-name $vmName --settings '{"tenantId":"'$dynatrace_id'","token": "'${dtToken//[$'\t\r\n']/}'","hostGroup":"'$dynatrace_host_group'","networkZone":"'$dynatrace_network_zone'","enableLogAnalytics":"yes"}'

        done

  - task: AzureCLI@2
    condition: always()
    displayName: Remove Build Agent IP from KV whitelist
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        agentIp=$(curl http://ifconfig.me/ip)/32
        echo "Removing agent ip $agentIp from KV"
        rgName="${{ parameters.product }}-sharedinfra-${{ parameters.env }}"
        kvName="${{ parameters.product }}-${{ parameters.env }}-kv"
        az keyvault network-rule remove \
          --resource-group $rgName \
          --name $kvName \
          --ip-address $agentIp