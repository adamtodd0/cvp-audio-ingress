parameters:
  - name: subscriptionName
    type: string
  - name: env
    type: string
  - name: location
    type: string
  - name: product
    type: string

steps:
  - task: AzurePowerShell@5
    inputs:
      azureSubscription: 'DTS-SHAREDSERVICES-SBOX'
      ScriptType: 'InlineScript'
      Inline: |
        $Context = Get-AzContext
        $AzureDevOpsServicePrincipal = Get-AzADServicePrincipal -ApplicationId $Context.Account.Id
        $ObjectId = $AzureDevOpsServicePrincipal.Id

        echo "##vso[task.setvariable variable=oid]$ObjectId"
      azurePowerShellVersion: 'LatestVersion'
      pwsh: true

  - task: AzureCLI@2
    displayName: Deploy Dynatrace
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # ensure KV exists in same sub we are working in
        rgName="${{ parameters.product }}-sharedinfra-${{ parameters.env }}"
        kvName="${{ parameters.product }}-${{ parameters.env }}-kv"
        oid=$(oid)
        echo "Logged in as oid $oid"

        echo "Add build agent ip $agentIp to KV $kvName"
        agentIp=$(curl http://ifconfig.me/ip)/32
        az keyvault network-rule add \
          --resource-group $rgName \
          --name $kvName \
          --ip-address $agentIp
        
        dynatrace_token=$(az keyvault secret show --id https://$kvName.vault.azure.net/secrets/$(dynatrace_token) | jq ".value" | sed -e 's/"//g')
        
        echo "$dynatrace_token"
        # delete ext for vm1
        az vm extension delete --subscription ${{ parameters.subscriptionName }} -g $rgName --vm-name $rgNameCom-vm1 -n oneAgentLinux || true
        # deploy to vm1 
        az vm extension set --publisher dynatrace.ruxit --name oneAgentLinux --subscription ${{ parameters.subscriptionName }} --resource-group $rgName --vm-name $rgNameCom-vm1 --settings '{"tenantId":"${dynatrace_id}","token":"${dynatrace_token}","hostGroup":"${dynatrace_host_group}","networkZone":"${dynatrace_network_zone}","enableLogAnalytics":"yes"}'
        # delete ext for vm2
        az vm extension delete --subscription ${{ parameters.subscriptionName}} -g $rgName --vm-name $rgNameCom-vm2 -n oneAgentLinux || true
        # deploy to vm2
        az vm extension set --publisher dynatrace.ruxit --name oneAgentLinux --subscription ${{ parameters.subscriptionName }} --resource-group $rgName --vm-name $rgNameCom-vm2 --settings '{"tenantId":"${dynatrace_id}","token":"${dynatrace_token}","hostGroup":"${dynatrace_host_group}","networkZone":"${dynatrace_network_zone}","enableLogAnalytics":"yes"}'